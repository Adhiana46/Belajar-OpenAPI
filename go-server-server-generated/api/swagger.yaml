openapi: 3.0.2
info:
  title: Todo List API
  description: OpenAPI for TodoList RESTful API
  termsOfService: https://my-portfolio-mocha-sigma.vercel.app
  contact:
    name: Adhiana Mastur
    url: https://my-portfolio-mocha-sigma.vercel.app
    email: adhianamastur48@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  version: "1.0"
externalDocs:
  description: Youtube Programmer Zaman Now
  url: http://www.youtube.com/c/ProgrammerZamanNow
servers:
- url: "https://{environment}.adhianadev.com/api/v1"
  description: TODOList RESTful API Server
  variables:
    environment:
      description: Server Environment
      enum:
      - dev
      - qa
      - prod
      default: dev
paths:
  /todolist:
    get:
      tags:
      - Todolist
      summary: Get all Todolist
      description: Only return active todolist
      parameters:
      - name: include_done
        in: query
        description: 'Include done todolist '
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          nullable: true
          default: true
      - name: name
        in: query
        description: Filter todolist by name
        required: false
        style: form
        explode: true
        schema:
          minLength: 3
          type: string
          nullable: true
        examples:
          java:
            description: Example name Java
            value: Java
          php:
            description: Example name PHP
            value: PHP
      responses:
        "200":
          description: Success Get Todolist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayTodolist'
              examples:
                success:
                  description: Example Success
                  value:
                  - id: 1
                    name: Olahraga Pagi
                    priority: 1
                    tags:
                    - olahraga
                    - gym
                    - sehat
                  - id: 2
                    name: Belajar Programming
                    priority: 1
                    tags:
                    - programming
                    - go
                    - coding
      security:
      - TodolistAuth:
        - read:todolist
    post:
      tags:
      - Todolist
      summary: Create a new Todolist
      description: Create a new active todolist
      requestBody:
        description: Ini description
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTodolist'
            examples:
              Beli Rumah:
                value:
                  name: Beli Rumah
                  priority: 10
                  tags:
                  - beli
                  - belanja
                  - rumah
              Olahraga Pagi:
                value:
                  name: Olahraga Pagi
                  priority: 20
                  tags:
                  - workout
                  - gym
                  - olahraga
        required: true
      responses:
        "200":
          description: Success Create Todolist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todolist'
              examples:
                success:
                  description: Example Success
                  value:
                    id: 1
                    name: Olahraga Pagi
                    priority: 1
                    tags:
                    - olahraga
                    - gym
                    - sehat
      security:
      - TodolistAuth:
        - create:todolist
  /todolist/{todolistId}:
    get:
      tags:
      - Todolist
      summary: Get Todolist by ID
      description: "Return todolist if exists, if not return error 404"
      parameters:
      - name: todolistId
        in: path
        description: Todolist ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Success Get Todolist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todolist'
              examples:
                success:
                  description: Example Success
                  value:
                    id: 1
                    name: Olahraga Pagi
                    priority: 1
                    tags:
                    - olahraga
                    - gym
                    - sehat
      security:
      - TodolistAuth:
        - read:todolist
    put:
      tags:
      - Todolist
      summary: Update Todolist by ID
      description: "Update todolist by id, if not exists return error 404"
      parameters:
      - name: todolistId
        in: path
        description: Todolist ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: Ini description
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTodolist'
            examples:
              Beli Rumah:
                value:
                  name: Beli Rumah
                  priority: 10
                  tags:
                  - beli
                  - belanja
                  - rumah
              Olahraga Pagi:
                value:
                  name: Olahraga Pagi
                  priority: 20
                  tags:
                  - workout
                  - gym
                  - olahraga
        required: true
      responses:
        "200":
          description: Success Update Todolist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todolist'
              examples:
                success:
                  description: Example Success
                  value:
                    id: 1
                    name: Olahraga Pagi
                    priority: 1
                    tags:
                    - olahraga
                    - gym
                    - sehat
      security:
      - TodolistAuth:
        - update:todolist
    delete:
      tags:
      - Todolist
      summary: Delete Todolist by ID
      description: "Delete todolist forever, if not exists return error 404"
      parameters:
      - name: todolistId
        in: path
        description: Todolist ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Success delete todolist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "404":
          description: Todolist not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
              examples:
                failed:
                  description: Failed delete todolist
                  value:
                    success: false
      security:
      - TodolistAuth:
        - delete:todolist
components:
  schemas:
    Todolist:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        priority:
          type: integer
          format: int32
        tags:
          type: array
          items:
            type: string
      example:
        name: name
        id: 0
        priority: 6
        tags:
        - tags
        - tags
    CreateUpdateTodolist:
      required:
      - name
      - priority
      type: object
      properties:
        name:
          minLength: 3
          type: string
        priority:
          minimum: 1
          type: integer
          format: int32
        tags:
          type: array
          items:
            minLength: 3
            type: string
            example: "[\"workout\",\"learn\",\"code\"]"
    ArrayTodolist:
      type: array
      items:
        $ref: '#/components/schemas/Todolist'
      x-schema-name: ArrayTodolist
    inline_response_200:
      type: object
      properties:
        success:
          type: boolean
      example:
        success: true
  parameters:
    TodolistId:
      name: todolistId
      in: path
      description: Todolist ID
      required: true
      style: simple
      explode: false
      schema:
        type: integer
  securitySchemes:
    TodolistAuth:
      type: apiKey
      description: Authentication for todolist RESTful API
      name: X-API-Key
      in: header
